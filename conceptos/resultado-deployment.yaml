apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "5"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"deployment-ivan","namespace":"ivancinigt-dev"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"miwebserver"}},"template":{"metadata":{"labels":{"app":"miwebserver"},"name":"pod-template-ivan"},"spec":{"containers":[{"image":"bitnami/nginx","imagePullPolicy":"IfNotPresent","name":"contenedor1"}],"resources":{"limits":{"cpu":"100m","memory":"100Mi"},"request":{"cpu":"100m","memory":"100Mi"}}}}}}
  creationTimestamp: "2024-07-03T09:56:37Z"
  generation: 6
  name: deployment-ivan
  namespace: ivancinigt-dev
  resourceVersion: "2440544387"
  uid: 8a4c4127-ada7-4777-b9e9-8543ddc33116
spec:
  progressDeadlineSeconds: 600
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: miwebserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: miwebserver
      name: pod-template-ivan
    spec:
      containers:
      - image: bitnami/nginx
        imagePullPolicy: IfNotPresent
        name: contenedor1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
